// <auto-generated />
using System;
using DDDApplication.Infrastructure.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DDDApplication.Infrastructure.Data.Migrations.Catalogs
{
    [DbContext(typeof(Contexts))]
    [Migration("20240512082004_initialize")]
    partial class initialize
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DDDApplication.Domian.Core.Catalogs.Categories.Category.Categories", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("category", "Catalog");
                });

            modelBuilder.Entity("DDDApplication.Domian.Core.Catalogs.Categories.Feature.Feature", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("sortCategory")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Feature", "Catalog");
                });

            modelBuilder.Entity("DDDApplication.Domian.Core.Catalogs.Products.product", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("character varying(400)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<double>("price")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Products", "Catalog");
                });

            modelBuilder.Entity("DDDApplication.Domian.Core.Catalogs.Categories.Category.Categories", b =>
                {
                    b.OwnsMany("DDDApplication.Domian.Core.Catalogs.Categories.Category.CategoryFeature", "CategoryFeatures", b1 =>
                        {
                            b1.Property<Guid>("CategoryId")
                                .HasColumnType("uuid");

                            b1.Property<Guid>("FeatureId")
                                .HasColumnType("uuid");

                            b1.Property<Guid>("CatgeCategoryId")
                                .HasColumnType("uuid");

                            b1.Property<Guid>("Id")
                                .HasColumnType("uuid");

                            b1.HasKey("CategoryId", "FeatureId");

                            b1.ToTable("CategoryFeature", "Catalog");

                            b1.WithOwner()
                                .HasForeignKey("CategoryId");
                        });

                    b.Navigation("CategoryFeatures");
                });

            modelBuilder.Entity("DDDApplication.Domian.Core.Catalogs.Products.product", b =>
                {
                    b.OwnsMany("DDDApplication.Domian.Core.Catalogs.Products.ProductFeature", "ProductFeatures", b1 =>
                        {
                            b1.Property<Guid>("ProductId")
                                .HasColumnType("uuid");

                            b1.Property<Guid>("FeatureId")
                                .HasColumnType("uuid");

                            b1.HasKey("ProductId", "FeatureId");

                            b1.ToTable("ProductFeture", "Catalog");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");
                        });

                    b.Navigation("ProductFeatures");
                });
#pragma warning restore 612, 618
        }
    }
}
